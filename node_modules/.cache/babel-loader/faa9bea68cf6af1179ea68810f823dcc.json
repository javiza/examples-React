{"ast":null,"code":"var _jsxFileName = \"/home/jona/Desktop/trabajos open-bootcamp_Reactjs/class/hooks/src/hooks/Ejemplo2.jsx\",\n    _s = $RefreshSig$();\n\n/**\n * Ejemplo de uso de:\n * - useState()\n * - useRef() referenciar eloementos dentro de la vista\n * - useEffect() para controlar los cambios en la vista\n */\n// rfc componente de tipo funcion/\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Ejemplo2 = () => {\n  _s();\n\n  // Vamos a crear dos contadores distintos\n  // cada uno en un estado diferente\n  const [contador1, setContador1] = useState(0);\n  const [contador2, setContador2] = useState(0); // Vamos a crear una referencia con useRef() para asociar una variable\n  // con un elemento del DOM del componente (vista HTML)\n\n  const miRef = useRef();\n\n  function incrementar1() {\n    setContador1(contador1 + 1);\n  }\n\n  function incrementar2() {\n    setContador2(contador2 + 1);\n  }\n  /**\n   * Trabajando con UseEffect\n   */\n\n  /**\n   * ? Caso 1: Ejecutar SIEMPRE un snippet de código\n   * Cada vez que haya un cambio en el estado del componente\n   * se ejecuta aquello que esté dentro del useEffect()\n   */\n  // useEffect(() => {\n  //     console.log('CAMBIO EN EL ESTADO DEL COMPONENTE');\n  //     console.log('Mostrando Referencia a elemento del DOM:');\n  //     console.log(miRef);\n  // });\n\n  /**\n   * ? Caso 2: Ejecutar SOLO CUANDO CAMBIE CONTADOR1\n   * Cada vez que haya un cambio en contador 1, se ejecuta lo que diga el useEffect()\n   * En caso de que cambie contador2, no habrá ejecución\n   */\n  // useEffect(() => {\n  //     console.log('CAMBIO EN EL ESTADO DEL CONTADOR 1');\n  //     console.log('Mostrando Referencia a elemento del DOM:');\n  //     console.log(miRef);\n  // }, [contador1]);\n\n  /**\n   * ? Caso 2: Ejecutar SOLO CUANDO CAMBIE CONTADOR1 o CONTADOR2\n   * Cada vez que haya un cambio en contador 1, se ejecuta lo que diga el useEffect()\n   * Cada vez que haya un cambio en contador 2, se ejecuta lo que diga el useEffect()\n   */\n\n\n  useEffect(() => {\n    console.log('CAMBIO EN EL ESTADO DEL CONTADOR 1 / CONTADOR 2');\n    console.log('Mostrando Referencia a elemento del DOM:');\n    console.log(miRef);\n  }, [contador1, contador2]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"*** Ejemplo de useState(), useRef() y useEffect() ***\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"CONTADOR 1: \", contador1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"CONTADOR 2: \", contador2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      ref: miRef,\n      children: \"Ejemplo de elemento referenciado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementar1,\n        children: \"Incrementar contador 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: incrementar2,\n        children: \"Incrementar contador 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Ejemplo2, \"HB0owLF1bHIP1cUaIZRNJZE0nF4=\");\n\n_c = Ejemplo2;\nexport default Ejemplo2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ejemplo2\");","map":{"version":3,"sources":["/home/jona/Desktop/trabajos open-bootcamp_Reactjs/class/hooks/src/hooks/Ejemplo2.jsx"],"names":["React","useState","useRef","useEffect","Ejemplo2","contador1","setContador1","contador2","setContador2","miRef","incrementar1","incrementar2","console","log"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB;AACA;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CAAD,CAA1C,CALmB,CAOnB;AACA;;AACA,QAAMQ,KAAK,GAAGP,MAAM,EAApB;;AAEA,WAASQ,YAAT,GAAuB;AACnBJ,IAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AACH;;AAED,WAASM,YAAT,GAAuB;AACnBH,IAAAA,YAAY,CAACD,SAAS,GAAG,CAAb,CAAZ;AACH;AAED;AACJ;AACA;;AAEI;AACJ;AACA;AACA;AACA;AAEI;AACA;AACA;AACA;AACA;;AAEA;AACJ;AACA;AACA;AACA;AAEI;AACA;AACA;AACA;AACA;;AAEA;AACJ;AACA;AACA;AACA;;;AAEKJ,EAAAA,SAAS,CAAC,MAAM;AACbS,IAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACH,GAJS,EAIP,CAACJ,SAAD,EAAYE,SAAZ,CAJO,CAAT;AAOD,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,iCAAiBF,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,iCAAiBE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAKI;AAAI,MAAA,GAAG,EAAEE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eASI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA5ED;;GAAMP,Q;;KAAAA,Q;AA8EN,eAAeA,QAAf","sourcesContent":["/**\n * Ejemplo de uso de:\n * - useState()\n * - useRef() referenciar eloementos dentro de la vista\n * - useEffect() para controlar los cambios en la vista\n */\n// rfc componente de tipo funcion/\nimport React, { useState, useRef, useEffect } from 'react';\n\nconst Ejemplo2 = () => {\n\n    // Vamos a crear dos contadores distintos\n    // cada uno en un estado diferente\n    const [contador1, setContador1] = useState(0);\n    const [contador2, setContador2] = useState(0);\n\n    // Vamos a crear una referencia con useRef() para asociar una variable\n    // con un elemento del DOM del componente (vista HTML)\n    const miRef = useRef();\n\n    function incrementar1(){\n        setContador1(contador1 + 1);\n    }\n\n    function incrementar2(){\n        setContador2(contador2 + 1);\n    }\n\n    /**\n     * Trabajando con UseEffect\n     */\n\n    /**\n     * ? Caso 1: Ejecutar SIEMPRE un snippet de código\n     * Cada vez que haya un cambio en el estado del componente\n     * se ejecuta aquello que esté dentro del useEffect()\n     */\n\n    // useEffect(() => {\n    //     console.log('CAMBIO EN EL ESTADO DEL COMPONENTE');\n    //     console.log('Mostrando Referencia a elemento del DOM:');\n    //     console.log(miRef);\n    // });\n\n    /**\n     * ? Caso 2: Ejecutar SOLO CUANDO CAMBIE CONTADOR1\n     * Cada vez que haya un cambio en contador 1, se ejecuta lo que diga el useEffect()\n     * En caso de que cambie contador2, no habrá ejecución\n     */\n\n    // useEffect(() => {\n    //     console.log('CAMBIO EN EL ESTADO DEL CONTADOR 1');\n    //     console.log('Mostrando Referencia a elemento del DOM:');\n    //     console.log(miRef);\n    // }, [contador1]);\n\n    /**\n     * ? Caso 2: Ejecutar SOLO CUANDO CAMBIE CONTADOR1 o CONTADOR2\n     * Cada vez que haya un cambio en contador 1, se ejecuta lo que diga el useEffect()\n     * Cada vez que haya un cambio en contador 2, se ejecuta lo que diga el useEffect()\n     */\n\n     useEffect(() => {\n        console.log('CAMBIO EN EL ESTADO DEL CONTADOR 1 / CONTADOR 2');\n        console.log('Mostrando Referencia a elemento del DOM:');\n        console.log(miRef);\n    }, [contador1, contador2]);\n\n\n    return (\n        <div>\n            <h1>*** Ejemplo de useState(), useRef() y useEffect() ***</h1>\n            <h2>CONTADOR 1: {contador1}</h2>\n            <h2>CONTADOR 2: {contador2}</h2>\n            {/* Elemento referenciado */}\n            <h4 ref={miRef}>\n                Ejemplo de elemento referenciado\n            </h4>\n            {/* Botones para cambiar los contadores */}\n            <div>\n                <button onClick={incrementar1}>Incrementar contador 1</button>\n                <button onClick={incrementar2}>Incrementar contador 2</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Ejemplo2;\n"]},"metadata":{},"sourceType":"module"}