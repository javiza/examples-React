{"ast":null,"code":"var _jsxFileName = \"/home/jona/Desktop/trabajos open-bootcamp_Reactjs/class/hooks/src/components/container/task_list.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { LEVELS } from '../../models/levels.enum';\nimport { Task } from '../../models/task.class';\nimport TaskComponent from '../pure/task';\nimport \"./../../styles/task.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskListComponent = () => {\n  _s();\n\n  // nuestros\n  const defaultTask = new Task('Example', 'Default description', false, LEVELS.NORMAL); // Estado del componente\n\n  const [tasks, setTasks] = useState([defaultTask]);\n  const [loading, setLoading] = useState(true); // Control del ciclo de vida del componente\n\n  useEffect(() => {\n    console.log('Task State has been modified');\n    setLoading(false);\n    return () => {\n      console.log('TaskList component is going to unmount...');\n    };\n  }, [tasks]);\n\n  const changeCompleted = id => {\n    console.log('TODO: Cambiar estado de una tarea');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Tasks:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskComponent, {\n      task: defaultTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskListComponent, \"RdfDym7GT4WGRIfTMS9kAqaHmW8=\");\n\n_c = TaskListComponent;\nexport default TaskListComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskListComponent\");","map":{"version":3,"sources":["/home/jona/Desktop/trabajos open-bootcamp_Reactjs/class/hooks/src/components/container/task_list.jsx"],"names":["React","useState","useEffect","LEVELS","Task","TaskComponent","TaskListComponent","defaultTask","NORMAL","tasks","setTasks","loading","setLoading","console","log","changeCompleted","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,OAAOC,aAAP,MAA0B,cAA1B;AACA,OAAiB,0BAAjB;;;AACA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAE5B;AAGA,QAAMC,WAAW,GAAG,IAAIH,IAAJ,CAAS,SAAT,EAAoB,qBAApB,EAA2C,KAA3C,EAAkDD,MAAM,CAACK,MAAzD,CAApB,CAL4B,CAO5B;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAACM,WAAD,CAAD,CAAlC;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC,CAT4B,CAU5B;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAF,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,WAAO,MAAM;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAY,2CAAZ;AACH,KAFD;AAGH,GANQ,EAMN,CAACL,KAAD,CANM,CAAT;;AASA,QAAMM,eAAe,GAAIC,EAAD,IAAQ;AAC5BH,IAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEP;AAArB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAjCD;;GAAMD,iB;;KAAAA,iB;AAoCN,eAAeA,iBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { LEVELS } from '../../models/levels.enum';\nimport { Task } from '../../models/task.class'\nimport TaskComponent from '../pure/task';\nimport {  } from \"./../../styles/task.scss\";\nconst TaskListComponent = () => {\n\n    // nuestros\n    \n\n    const defaultTask = new Task('Example', 'Default description', false, LEVELS.NORMAL);\n\n    // Estado del componente\n    const [tasks, setTasks] = useState([defaultTask]);\n    const [loading, setLoading] = useState(true);\n    // Control del ciclo de vida del componente\n    useEffect(() => {\n        console.log('Task State has been modified');\n        setLoading(false);\n        return () => {\n            console.log('TaskList component is going to unmount...')\n        }\n    }, [tasks])\n\n\n    const changeCompleted = (id) => {\n        console.log('TODO: Cambiar estado de una tarea')\n    }\n\n    return (\n        <div>\n            <div>\n                <h1>Your Tasks:</h1>\n            </div>\n            {/* TODO: Aplicar un For/Map para renderizar un a lista */}\n            <TaskComponent task={defaultTask}></TaskComponent>\n        </div>\n    );\n};\n\n\nexport default TaskListComponent;\n"]},"metadata":{},"sourceType":"module"}