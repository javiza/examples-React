{"ast":null,"code":"var _jsxFileName = \"/home/jona/Desktop/trabajos open-bootcamp_Reactjs/class/hooks/src/components/pure/greetingStyled.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //definiendo estilos encontrados:\n// ? estilo para usuario logueado\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loggedStyle = {\n  color: 'white'\n};\nconst unloggedStyle = {\n  color: 'tomato',\n  fontWeight: 'bold'\n};\n\nconst GreetingStyled = props => {\n  _s();\n\n  //generamos un estado para el componente\n  // y asi controlar si el usuario esta o no logueado\n  const [logged, setLogged] = useState(false); // const greetingUser = () => (<p>hola, {props.name}</p>)\n  // const pleaseLogin = () => (<p>please login</p>);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: logged ? loggedStyle : unloggedStyle,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        console.log('boton pulsado');\n        setLogged(!logged);\n      },\n      children: logged ? 'Logout' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GreetingStyled, \"65h5yPFHX7llNF/8z9vDbAXASqw=\");\n\n_c = GreetingStyled;\nexport default GreetingStyled;\n\nvar _c;\n\n$RefreshReg$(_c, \"GreetingStyled\");","map":{"version":3,"sources":["/home/jona/Desktop/trabajos open-bootcamp_Reactjs/class/hooks/src/components/pure/greetingStyled.jsx"],"names":["React","useState","loggedStyle","color","unloggedStyle","fontWeight","GreetingStyled","props","logged","setLogged","console","log"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CACA;AAGA;;;AACA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,KAAK,EAAE;AADS,CAApB;AAIA,MAAMC,aAAa,GAAG;AAClBD,EAAAA,KAAK,EAAE,QADW;AAElBE,EAAAA,UAAU,EAAE;AAFM,CAAtB;;AAKA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAE9B;AACA;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC,CAJ8B,CAK9B;AACA;;AAEA,sBACI;AAAK,IAAA,KAAK,EAAEO,MAAM,GAAGN,WAAH,GAAiBE,aAAnC;AAAA,2BAKI;AAAQ,MAAA,OAAO,EAAE,MAAI;AACjBM,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAF,QAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,OAHD;AAAA,gBAIMA,MAAM,GAAG,QAAH,GAAc;AAJ1B;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAtBD;;GAAMF,c;;KAAAA,c;AAwBN,eAAeA,cAAf","sourcesContent":["\nimport React, {useState} from 'react';\n//definiendo estilos encontrados:\n\n\n// ? estilo para usuario logueado\nconst loggedStyle = {\n    color: 'white'\n};\n\nconst unloggedStyle = {\n    color: 'tomato',\n    fontWeight: 'bold'\n}\n\nconst GreetingStyled = (props) => {\n\n    //generamos un estado para el componente\n    // y asi controlar si el usuario esta o no logueado\n    const [logged, setLogged] = useState(false)\n    // const greetingUser = () => (<p>hola, {props.name}</p>)\n    // const pleaseLogin = () => (<p>please login</p>);\n\n    return (\n        <div style={logged ? loggedStyle : unloggedStyle }>\n        {/* otra alternativa para manejar con ternarios */}\n            {/* { logged ? (<p>hola, {props.name}</p>) : (<p>please login </p>)} */}\n            {/* { logged ? greetingUser: pleaseLogin} */}\n\n            <button onClick={()=>{\n                console.log('boton pulsado')\n                setLogged(!logged);\n            }}>\n                { logged ? 'Logout' : 'Login' }\n            </button>\n        </div>\n    );\n}\n\nexport default GreetingStyled;\n"]},"metadata":{},"sourceType":"module"}