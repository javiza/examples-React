{"ast":null,"code":"var _jsxFileName = \"/home/jona/Desktop/trabajos open-bootcamp_Reactjs/class/hooks/src/hooks/Ejemplo1.jsx\",\n    _s = $RefreshSig$();\n\n/**\n * Ejemplo de uso del Hook useState\n * \n * Crear un componente de tipo función y acceder a su estado\n * privado a través de un hook y, además, poder modificarlo\n */\n//  RFC nos creara un componente de tipo funcion\n// todos los hooks empiezan por use\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Ejemplo1 = () => {\n  _s();\n\n  // Valor inicial para un contador\n  const valorInicial = 0; // Valor inicial para una persona\n\n  const personaInicial = {\n    nombre: 'Martín',\n    email: 'martin@imaginagroup.com'\n  };\n  /**\n   * Queremos que el VALORINICIAL y PERSONAINICIAL sean \n   * parte del estado del componente para así poder gestionar su cambio\n   * y que éste se vea reflejado en la vista del componente.\n   * \n   * const [nombreVariable, funcionParaCambiar] = useState(valorInicial)\n   */\n\n  const [contador, setContador] = useState(valorInicial);\n  const [persona, setPersona] = useState(personaInicial);\n  /**\n   * Función para actualizar el estado privado que contiene el contador\n   */\n\n  function incrementarContador() {\n    // ? funcionParaCambiar(nuevoValor)\n    setContador(contador + 1);\n  }\n  /**\n   * Función para actualizar el estado de persona en el componente\n   */\n\n\n  function actualizarPersona() {\n    setPersona({\n      nombre: 'Pepe',\n      email: 'pepe@imaginagroup.com'\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"*** Ejemplo de useState() ***\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"CONTADOR: \", contador]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"DATOS DE LA PERSONA:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"NOMBRE: \", persona.nombre]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"EMAIL: \", persona.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: incrementarContador,\n      children: \"Incrementar contador\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: actualizarPersona,\n      children: \"Actualizar persona\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Ejemplo1, \"wS5Rg5eFoUf1MNXQExl1P6T8+Xw=\");\n\n_c = Ejemplo1;\nexport default Ejemplo1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ejemplo1\");","map":{"version":3,"sources":["/home/jona/Desktop/trabajos open-bootcamp_Reactjs/class/hooks/src/hooks/Ejemplo1.jsx"],"names":["React","useState","Ejemplo1","valorInicial","personaInicial","nombre","email","contador","setContador","persona","setPersona","incrementarContador","actualizarPersona"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB;AACA,QAAMC,YAAY,GAAG,CAArB,CAHmB,CAKnB;;AACA,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAG,QADU;AAEnBC,IAAAA,KAAK,EAAE;AAFY,GAAvB;AAKA;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEI,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAACE,YAAD,CAAxC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAACG,cAAD,CAAtC;AAEA;AACJ;AACA;;AACI,WAASO,mBAAT,GAA8B;AAC1B;AACAH,IAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACH;AAED;AACJ;AACA;;;AACI,WAASK,iBAAT,GAA4B;AACxBF,IAAAA,UAAU,CACN;AACIL,MAAAA,MAAM,EAAE,MADZ;AAEIC,MAAAA,KAAK,EAAE;AAFX,KADM,CAAV;AAMH;;AAGD,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,+BAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,6BAAaE,OAAO,CAACJ,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,4BAAYI,OAAO,CAACH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAOI;AAAQ,MAAA,OAAO,EAAEK,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAQ,MAAA,OAAO,EAAEC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAvDD;;GAAMV,Q;;KAAAA,Q;AAyDN,eAAeA,QAAf","sourcesContent":["/**\n * Ejemplo de uso del Hook useState\n * \n * Crear un componente de tipo función y acceder a su estado\n * privado a través de un hook y, además, poder modificarlo\n */\n//  RFC nos creara un componente de tipo funcion\n// todos los hooks empiezan por use\n\nimport React, { useState } from 'react';\n\nconst Ejemplo1 = () => {\n\n    // Valor inicial para un contador\n    const valorInicial = 0;\n\n    // Valor inicial para una persona\n    const personaInicial = {\n        nombre : 'Martín',\n        email: 'martin@imaginagroup.com'\n    }\n\n    /**\n     * Queremos que el VALORINICIAL y PERSONAINICIAL sean \n     * parte del estado del componente para así poder gestionar su cambio\n     * y que éste se vea reflejado en la vista del componente.\n     * \n     * const [nombreVariable, funcionParaCambiar] = useState(valorInicial)\n     */\n\n    const [contador, setContador] = useState(valorInicial);\n    const [persona, setPersona] = useState(personaInicial);\n\n    /**\n     * Función para actualizar el estado privado que contiene el contador\n     */\n    function incrementarContador(){\n        // ? funcionParaCambiar(nuevoValor)\n        setContador(contador + 1);\n    }\n\n    /**\n     * Función para actualizar el estado de persona en el componente\n     */\n    function actualizarPersona(){\n        setPersona(\n            {\n                nombre: 'Pepe',\n                email: 'pepe@imaginagroup.com'\n            }\n        )\n    }\n\n\n    return (\n        <div>\n            <h1>*** Ejemplo de useState() ***</h1>\n            <h2>CONTADOR: {contador}</h2>\n            <h2>DATOS DE LA PERSONA:</h2>\n            <h3>NOMBRE: {persona.nombre}</h3>\n            <h4>EMAIL: {persona.email}</h4>\n            {/* Bloque de botones para actualizar el estado del componente */}\n            <button onClick={incrementarContador}>Incrementar contador</button>\n            <button onClick={actualizarPersona}>Actualizar persona</button>\n        </div>\n    );\n}\n\nexport default Ejemplo1;\n\n\n"]},"metadata":{},"sourceType":"module"}